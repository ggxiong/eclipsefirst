<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 扫描组件 -->
	<context:component-scan
		base-package="com.blb.cn">
		<!-- 通过注解方式排除 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 数据源 -->
	<!-- properties文件的引入 -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />

	<!-- DataSource数据源的配置 -->
	<bean id="datasource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- 声明事务管理器 -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>

	</bean>

	<!-- 开启事务注解驱动 -->
	<!-- <tx:annotation-driven
		transaction-manager="dataSourceTransactionManager" /> -->

    <!--开启基于注解的事务，使用xml配置形成的事务（必要主要 都是使用配置式） -->

    <aop:config>
    <!-- 切入点表达式 -->
    <aop:pointcut expression="execution(* com.blb.cn.service..*(..))" id="txPoint"/>
    <!-- 配置事务增强 -->
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>

    <!-- 配置事务增强，事务如何切入 -->
     <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
     <tx:attributes>
     <!-- 所有方法都是事务方法 -->
     <tx:method name="*"/>
     <!-- 以select开始的所有方法 -->
     <tx:method name="get*" read-only="true"/>
     </tx:attributes>
     </tx:advice>



	<!-- sqlSessionFactoryBean：管理mybatis操作数据库的会话对象sqlSession -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 设置mybatis核心配置文件的路径 -->
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<!-- 设置数据源 -->
		<property name="dataSource" ref="datasource"></property>
		<!-- 设置类型别名 -->
		<property name="typeAliasesPackage" value="com.blb.cn.bean"></property>
		<!-- 设置映射文件的路径 -->
		<property name="mapperLocations"
			value="classpath:com/blb/cn/dao/*.xml"></property>

	</bean>

    <!-- 在所设置的包下，将所有的接口生成动态代理实现类，由spring容器管理 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.blb.cn.dao"></property>

	</bean>

    <!-- 配置一个可以执行批量的sqlSession -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
 	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"></constructor-arg>
 	<constructor-arg name="executorType" value="BATCH" />
 </bean>

</beans>
